{"version":3,"sources":["theme/breakpoints.js","theme/styles.js","theme/index.js","data/categories.js","functions/toProperCase.js","components/CategoriesNav/NavOverlay/index.js","components/CategoriesNav/index.js","components/Footer/index.js","adapters/useAPIrequest.js","components/MovieDetails/Trailer/index.js","components/MovieCard/index.js","components/MovieDetails/SuggestedMovies/index.js","components/MovieDetails/index.js","components/Navbar/ColorModeToggle/index.js","components/Navbar/InputAsButton/index.js","components/Navbar/index.js","components/YoutubeEmbedded/index.js","pages/Home/NewRelease/ReleaseCard/index.js","pages/Home/NewRelease/ReleaseHeader/index.js","pages/Home/NewRelease/index.js","pages/Home/RecentlyAdded/index.js","pages/Home/TopMovies/TopMoviesHeader/index.js","pages/Home/TopMovies/index.js","pages/Home/index.js","hooks/useWidnowLocation.js","pages/Movies/Pagination/index.js","pages/Movies/SortControls/index.js","pages/Movies/index.js","App.js","index.js"],"names":["breakpoints","createBreakpoints","base","xs","sm","md","lg","xl","xxl","styles","global","minWidth","width","height","bg","transition","borderRadius","overflow","overrides","extendTheme","config","initialColorMode","useSystemColorMode","categories","toProperCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","NavOverlay","visibility","setIsOpen","h","w","pos","top","left","zIndex","sx","backdropFilter","WebkitBackdropFilter","onClick","onTouchStart","opacity","CategoriesNav","isOpen","toggleSideNav","useEffect","document","getElementsByTagName","classList","add","remove","p","py","align","boxShadow","spacing","overflowY","right","useColorModeValue","alignSelf","display","icon","textTransform","as","fontSize","fontWeight","RouterLink","to","map","val","key","Footer","justify","mb","href","isExternal","useAPIrequest","APIconString","useState","response","setResponse","error","setError","source","axios","CancelToken","makeGETRequest","cancel","con","a","setTimeout","get","cancelToken","token","timeout","then","res","data","catch","e","Trailer","ytID","isLoading","setIsLoading","isLoaded","ratio","maxW","title","id","type","onLoad","src","MovieCard","img","year","rating","aspect","imageIsLoading","setImageIsLoading","history","useHistory","cursor","push","_hover","transform","rounded","objectFit","alt","fit","isTruncated","AiFillStar","color","whiteSpace","dir","toFixed","SuggestedMovies","columns","movies","MovieDetails","useDisclosure","onOpen","onClose","query","URLSearchParams","useLocation","search","starColor","size","mx","pb","direction","movie","wrap","AiFillLike","toLocaleString","FaDownload","FaLanguage","IoTime","url","colorScheme","leftIcon","quality","ColorModeToggle","useColorMode","colorMode","toggleColorMode","InputAsButton","body","addEventListener","keyCode","altKey","pointerEvents","children","Button","justifyContent","variant","mr","Navbar","SearchTerm","setSearchTerm","row","mt","colSpan","Link","colStart","rowStart","onChange","target","value","placeholder","YoutubeEmbedded","videoID","px","ReleaseCard","show","youtube","Fade","in","VStack","inset","textAlign","textShadow","textColor","ReleaseHeader","NewRelease","page","setPage","slides","setSlides","handlePageChange","arr","item","index","bottom","Array","i","RecentlyAdded","slice","TopMoviesHeader","handlePageNav","isDisabled","rightIcon","TopMovies","Center","Home","useWidnowLocation","location","genreFromURL","pathname","split","pop","Pagination","movie_count","limit","totalPages","Math","ceil","isAttached","SortControls","setQuality","setGenre","setOrderBy","setRating","displayGenre","defaultValue","min","max","step","onChangeEnd","position","boxSize","Movies","genre","orderBy","App","exact","path","component","ReactDOM","render","StrictMode","resetCSS","theme","getElementById"],"mappings":"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","file":"static/js/main.42c2e87c.chunk.js","sourcesContent":["import { createBreakpoints } from \"@chakra-ui/theme-tools\";\n\nconst breakpoints = createBreakpoints({\n  base: 0,\n  xs: \"367px\",\n  sm: \"576px\",\n  md: \"768px\",\n  lg: \"992px\",\n  xl: \"1200px\",\n  xxl: \"1400px\",\n});\n\nexport default breakpoints;\n","const styles = {\n  global: {\n    \"html, body\": {\n      minWidth: \"360px\",\n    },\n    \"::-webkit-scrollbar\": {\n      width: { xs: \"6px\", lg: \"8px\" },\n      height: { xs: \"6px\", lg: \"8px\" },\n    },\n    \"::-webkit-scrollbar-thumb\": {\n      bg: \"rgba(0, 0, 0, 0.4)\",\n      transition: \".25s ease-in-out\",\n      borderRadius: \"10px\",\n    },\n    \"::-webkit-scrollbar-thumb:hover\": {\n      bg: \"rgba(0, 0, 0, 0.6)\",\n    },\n    \"::-webkit-scrollbar-track\": {\n      bg: \"inherit\",\n      borderRadius: \"0\",\n    },\n    \".no-scroll\": {\n      overflow: \"hidden\",\n    },\n  },\n};\n\nexport default styles;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nimport breakpoints from \"./breakpoints\";\nimport styles from \"./styles\";\n\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: true,\n};\n\nconst overrides = extendTheme({\n  config,\n  breakpoints,\n  styles,\n});\n\nexport default overrides;\n","const categories = [\n  \"action\",\n  \"adventure\",\n  \"animation\",\n  \"biography\",\n  \"comedy\",\n  \"crime\",\n  \"documentary\",\n  \"drama\",\n  \"family\",\n  \"fantasy\",\n  \"film-noir\",\n  \"game-show\",\n  \"history\",\n  \"horror\",\n  \"music\",\n  \"musical\",\n  \"mystery\",\n  \"news\",\n  \"reality-tv\",\n  \"romance\",\n  \"sci-fi\",\n  \"sport\",\n  \"talk-show\",\n  \"thriller\",\n  \"war\",\n  \"western\",\n];\n\nexport default categories;\n","const toProperCase = (str) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexport default toProperCase;\n","import { Box } from \"@chakra-ui/layout\";\nimport React from \"react\";\n\nconst NavOverlay = ({ visibility, setIsOpen }) => {\n  return (\n    <Box\n      h=\"100%\"\n      w=\"100%\"\n      pos=\"fixed\"\n      top={0}\n      left={0}\n      zIndex=\"docked\"\n      bg=\"blackAlpha.400\"\n      sx={{\n        backdropFilter: \"blur(4px)\",\n        WebkitBackdropFilter: \"blur(4px)\",\n      }}\n      onClick={() => setIsOpen(false)}\n      onTouchStart={() => setIsOpen(false)}\n      opacity={visibility === \"visible\" ? 1 : 0}\n      transition=\".25s ease-in-out\"\n      visibility={visibility}\n    ></Box>\n  );\n};\n\nexport default NavOverlay;\n","import {\n  VStack,\n  Heading,\n  Box,\n  Link,\n  useColorModeValue,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport categories from \"../../data/categories\";\nimport toProperCase from \"../../functions/toProperCase\";\nimport { FaTimes } from \"react-icons/fa\";\nimport NavOverlay from \"./NavOverlay\";\n\nconst CategoriesNav = ({ isOpen, toggleSideNav, setIsOpen }) => {\n  useEffect(() => {\n    if (isOpen === true) {\n      document.getElementsByTagName(\"html\")[0].classList.add(\"no-scroll\");\n    } else {\n      document.getElementsByTagName(\"html\")[0].classList.remove(\"no-scroll\");\n    }\n  }, [isOpen]);\n\n  return (\n    <>\n      <NavOverlay\n        visibility={isOpen ? \"visible\" : \"hidden\"}\n        setIsOpen={setIsOpen}\n      />\n      <VStack\n        p={{ base: 4, md: 0 }}\n        py={6}\n        w={{ base: \"220px\", md: \"full\" }}\n        align=\"start\"\n        transition=\"right 0.5s\"\n        boxShadow={{ base: \"dark-lg\", md: \"none\" }}\n        spacing={6}\n        pos={{ base: \"fixed\", md: \"relative\" }}\n        zIndex=\"banner\"\n        overflowY=\"auto\"\n        h=\"100%\"\n        right={{ base: isOpen ? 0 : \"-100%\", md: 0 }}\n        top={0}\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n      >\n        <IconButton\n          py={3}\n          alignSelf=\"flex-end\"\n          onClick={() => toggleSideNav()}\n          display={{ base: \"flex\", md: \"none\" }}\n          icon={<FaTimes />}\n        ></IconButton>\n        <Heading textTransform=\"uppercase\" as=\"h4\" fontSize=\"md\">\n          Categories\n        </Heading>\n        <Box as=\"hr\" w=\"full\" />\n        <VStack\n          spacing={1}\n          align=\"start\"\n          w=\"full\"\n          fontSize=\"md\"\n          fontWeight=\"normal\"\n        >\n          <Link\n            onClick={() => setIsOpen(false)}\n            as={RouterLink}\n            to=\"/movies/all\"\n          >\n            All Movies\n          </Link>\n          <Link\n            onClick={() => setIsOpen(false)}\n            as={RouterLink}\n            to=\"/movies/new\"\n          >\n            New Releases\n          </Link>\n          <Link\n            onClick={() => setIsOpen(false)}\n            as={RouterLink}\n            to=\"/movies/recent\"\n          >\n            Recently Added\n          </Link>\n          <Link\n            onClick={() => setIsOpen(false)}\n            as={RouterLink}\n            to=\"/movies/rating\"\n          >\n            Top Rated\n          </Link>\n          <Link\n            onClick={() => setIsOpen(false)}\n            as={RouterLink}\n            to=\"/movies/likes\"\n          >\n            Top Likes\n          </Link>\n          <Link\n            onClick={() => setIsOpen(false)}\n            as={RouterLink}\n            to=\"/movies/downloads\"\n          >\n            Top Downloads\n          </Link>\n        </VStack>\n        <Heading textTransform=\"uppercase\" as=\"h4\" fontSize=\"md\">\n          Genres\n        </Heading>\n        <Box as=\"hr\" w=\"full\" />\n        <VStack\n          spacing={1}\n          align=\"start\"\n          w=\"full\"\n          fontSize=\"md\"\n          fontWeight=\"normal\"\n        >\n          {categories.map((val, key) => {\n            return (\n              <Link\n                onClick={() => setIsOpen(false)}\n                as={RouterLink}\n                to={\"/movies/\" + val}\n                key={key}\n              >\n                {toProperCase(val)}\n              </Link>\n            );\n          })}\n        </VStack>\n      </VStack>\n    </>\n  );\n};\n\nexport default CategoriesNav;\n","import { Heading, HStack, Link, Text, VStack, Wrap } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React from \"react\";\nimport { ImVideoCamera } from \"react-icons/im\";\n\nconst Footer = () => {\n  return (\n    <Wrap spacing={3} w=\"full\" justify=\"space-between\" align=\"center\" mb={6}>\n      <VStack>\n        <Text align=\"left\">\n          Designed & Developed by{\" \"}\n          <Link\n            fontWeight=\"semibold\"\n            href=\"https://stepanpavlov.com\"\n            isExternal=\"true\"\n          >\n            Stepan Pavlov\n          </Link>\n        </Text>\n        <Text align=\"left\" w=\"full\">\n          Movies Source:{\" \"}\n          <Link fontWeight=\"semibold\" href=\"https://yts.mx/\" isExternal=\"true\">\n            YTS.mx\n          </Link>\n        </Text>\n      </VStack>\n      <HStack as={RouterLink} to=\"/\" fontSize=\"4xl\">\n        <ImVideoCamera />\n        <Heading as=\"h2\" fontSize=\"2xl\">\n          MovieLister\n        </Heading>\n      </HStack>\n    </Wrap>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useAPIrequest = (APIconString) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n\n    makeGETRequest(APIconString, source);\n\n    return () => {\n      source.cancel();\n    };\n  }, [APIconString]);\n\n  const makeGETRequest = async (con, source) => {\n    setTimeout(() => {\n      source.cancel(\"Response timed out\");\n    }, 20000);\n\n    await axios\n      .get(con, { cancelToken: source.token }, { timeout: 20000 })\n      .then((res) => {\n        setResponse(res.data);\n      })\n      .catch((e) => {\n        setError(e);\n      });\n  };\n\n  return { response, error };\n};\n\nexport default useAPIrequest;\n","import { AspectRatio, Skeleton } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Trailer = ({ ytID }) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, [ytID]);\n\n  return (\n    <Skeleton w=\"full\" isLoaded={!isLoading}>\n      <AspectRatio ratio={16 / 9} maxW=\"full\">\n        <iframe\n          title={ytID}\n          id=\"ytplayer\"\n          type=\"text/html\"\n          onLoad={() => setIsLoading(false)}\n          src={\"https://www.youtube.com/embed/\" + ytID}\n        ></iframe>\n      </AspectRatio>\n    </Skeleton>\n  );\n};\n\nexport default Trailer;\n","import {\n  AspectRatio,\n  Box,\n  Heading,\n  HStack,\n  Image,\n  Skeleton,\n  Text,\n  useColorModeValue,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { AiFillStar } from \"react-icons/ai\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieCard = ({ img, title, year, rating, isLoading, aspect, id }) => {\n  const [imageIsLoading, setImageIsLoading] = useState(true);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isLoading === true) {\n      setImageIsLoading(true);\n    }\n  }, [isLoading]);\n\n  return (\n    <VStack\n      cursor=\"pointer\"\n      onClick={() => history.push(\"?movie_id=\" + id)}\n      align=\"start\"\n      _hover={{ transform: \"scale(1.05)\" }}\n      transition=\".25s ease-in-out\"\n      maxW=\"300px\"\n    >\n      <Skeleton rounded=\"lg\" w=\"full\" isLoaded={!isLoading && !imageIsLoading}>\n        <AspectRatio ratio={aspect ? aspect : 2 / 3} w=\"full\" objectFit=\"cover\">\n          <Image\n            alt={title}\n            fit=\"cover\"\n            rounded=\"lg\"\n            src={img}\n            onLoad={() => setImageIsLoading(false)}\n          />\n        </AspectRatio>\n      </Skeleton>\n      <Skeleton maxW=\"full\" isLoaded={!isLoading}>\n        <Heading maxW=\"full\" as=\"h3\" fontSize=\"md\" isTruncated title={title}>\n          {title}\n        </Heading>\n      </Skeleton>\n      <Skeleton width=\"min\" isLoaded={!isLoading}>\n        <HStack width=\"full\" align=\"center\">\n          {year > 0 && <Text>{year}</Text>}\n          <Box\n            as={AiFillStar}\n            fontSize=\"20px\"\n            color={useColorModeValue(\"green.500\", \"green.200\")}\n          />\n          <Text\n            whiteSpace=\"nowrap\"\n            display=\"flex\"\n            dir=\"row\"\n            fontWeight=\"semibold\"\n          >\n            {rating > 0 ? rating.toFixed(1) + \" / 10\" : \"No rating\"}\n          </Text>\n        </HStack>\n      </Skeleton>\n    </VStack>\n  );\n};\n\nexport default MovieCard;\n","import { GridItem, SimpleGrid } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport useAPIrequest from \"../../../adapters/useAPIrequest\";\nimport MovieCard from \"./../../MovieCard\";\n\nconst SuggestedMovies = ({ id }) => {\n  const { response } = useAPIrequest(\n    \"https://yts.mx/api/v2/movie_suggestions.json?movie_id=\" + id,\n  );\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (response && response !== null) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [response]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, [id]);\n\n  return (\n    <SimpleGrid columns={{ base: 1, xs: 2, md: 4 }} w=\"full\" spacing={3}>\n      {response &&\n        response.data.movies.map((val, key) => {\n          return (\n            <GridItem key={key}>\n              <MovieCard\n                img={val[\"medium_cover_image\"]}\n                title={val[\"title_english\"]}\n                year={val[\"year\"]}\n                isLoading={isLoading}\n                rating={val[\"rating\"]}\n                id={val[\"id\"]}\n              />\n            </GridItem>\n          );\n        })}\n    </SimpleGrid>\n  );\n};\n\nexport default SuggestedMovies;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  Image,\n  Heading,\n  HStack,\n  VStack,\n  Text,\n  Divider,\n  Badge,\n  Box,\n  useColorModeValue,\n  Wrap,\n  Center,\n  Spinner,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport useAPIrequest from \"../../adapters/useAPIrequest\";\nimport { IoTime } from \"react-icons/io5\";\nimport { AiFillLike, AiFillStar } from \"react-icons/ai\";\nimport { FaDownload, FaLanguage } from \"react-icons/fa\";\nimport Trailer from \"./Trailer\";\nimport SuggestedMovies from \"./SuggestedMovies\";\n\nconst MovieDetails = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n  };\n\n  const query = useQuery();\n  const history = useHistory();\n\n  const id = query.get(\"movie_id\");\n\n  useEffect(() => {\n    if (id) {\n      onOpen();\n    }\n  }, [query, id, onOpen]);\n\n  const handleClose = () => {\n    history.replace({\n      search: \"\",\n    });\n    onClose();\n  };\n\n  const { response } = useAPIrequest(\n    \"https://yts.mx/api/v2/movie_details.json?movie_id=\" + id,\n  );\n\n  const starColor = useColorModeValue(\"green.500\", \"green.200\");\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (response && response !== null) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [response]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, [id]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={handleClose} size=\"2xl\">\n      <ModalOverlay />\n      <ModalContent mx={6}>\n        <ModalHeader pb={6} />\n        <ModalCloseButton />\n        <ModalBody pb={3}>\n          {response && (\n            <VStack spacing={6}>\n              <Stack\n                direction={{ base: \"column\", sm: \"row\" }}\n                w=\"full\"\n                align=\"start\"\n                spacing={6}\n              >\n                <Image\n                  width={{ base: \"100%\", sm: \"200px\" }}\n                  rounded=\"md\"\n                  src={response.data.movie[\"large_cover_image\"]}\n                ></Image>\n                <VStack spacing={3} w=\"full\" align=\"start\">\n                  <Heading as=\"h1\" align=\"left\">\n                    {response.data.movie[\"title_long\"]}\n                  </Heading>\n                  <Divider />\n                  <Wrap spacing={3} wrap=\"wrap\" justify=\"flex-start\" w=\"full\">\n                    {response.data.movie[\"genres\"].map((val, key) => {\n                      return <Badge key={key}>{val}</Badge>;\n                    })}\n                  </Wrap>\n                  <HStack spacing={3} justify=\"flex-start\" w=\"full\">\n                    <Box as={AiFillStar} fontSize=\"20px\" color={starColor} />\n                    <Text\n                      whiteSpace=\"nowrap\"\n                      display=\"flex\"\n                      dir=\"row\"\n                      fontWeight=\"semibold\"\n                    >\n                      {response.data.movie[\"rating\"] > 0\n                        ? response.data.movie[\"rating\"].toFixed(1) + \" / 10\"\n                        : \"No rating\"}\n                    </Text>\n                  </HStack>\n                  <HStack spacing={3} justify=\"flex-start\" w=\"full\">\n                    <Box as={AiFillLike} fontSize=\"20px\" color={starColor} />\n                    <Text\n                      whiteSpace=\"nowrap\"\n                      display=\"flex\"\n                      dir=\"row\"\n                      fontWeight=\"semibold\"\n                    >\n                      {response.data.movie[\"like_count\"] > 0\n                        ? response.data.movie[\"like_count\"].toLocaleString()\n                        : \"No Likes\"}\n                    </Text>\n                  </HStack>\n                  <HStack spacing={3} justify=\"flex-start\" w=\"full\">\n                    <Box as={FaDownload} fontSize=\"20px\" color={starColor} />\n                    <Text\n                      whiteSpace=\"nowrap\"\n                      display=\"flex\"\n                      dir=\"row\"\n                      fontWeight=\"semibold\"\n                    >\n                      {response.data.movie[\"download_count\"] > 0\n                        ? response.data.movie[\"download_count\"].toLocaleString()\n                        : \"No Downloads\"}\n                    </Text>\n                  </HStack>\n                  <HStack spacing={3} justify=\"flex-start\" w=\"full\">\n                    <Box as={FaLanguage} fontSize=\"20px\" color={starColor} />\n                    <Text\n                      whiteSpace=\"nowrap\"\n                      display=\"flex\"\n                      dir=\"row\"\n                      fontWeight=\"semibold\"\n                    >\n                      {response.data.movie[\"language\"] !== \"\"\n                        ? response.data.movie[\"language\"].toUpperCase()\n                        : \"Unknown\"}\n                    </Text>\n                  </HStack>\n                  <HStack spacing={3} justify=\"flex-start\" w=\"full\">\n                    <Box as={IoTime} fontSize=\"20px\" color={starColor} />\n                    <Text\n                      whiteSpace=\"nowrap\"\n                      display=\"flex\"\n                      dir=\"row\"\n                      fontWeight=\"semibold\"\n                    >\n                      {response.data.movie[\"runtime\"] > 0\n                        ? response.data.movie[\"runtime\"] + \" Minutes\"\n                        : \"Unknown\"}\n                    </Text>\n                  </HStack>\n                </VStack>\n              </Stack>\n              {response.data.movie[\"yt_trailer_code\"] !== \"\" && (\n                <>\n                  <Divider />\n                  <Heading as=\"h3\" fontSize=\"lg\" align=\"left\" w=\"full\">\n                    Trailer\n                  </Heading>\n                  <Trailer ytID={response.data.movie[\"yt_trailer_code\"]} />\n                </>\n              )}\n              {response.data.movie[\"description_full\"] && (\n                <>\n                  <Divider />\n                  <Heading as=\"h3\" fontSize=\"lg\" align=\"left\" w=\"full\">\n                    Description\n                  </Heading>\n                  <Text align=\"left\" w=\"full\">\n                    {response.data.movie[\"description_full\"]}\n                  </Text>\n                </>\n              )}\n              <Divider />\n              <Heading as=\"h3\" fontSize=\"lg\" align=\"left\" w=\"full\">\n                Torrents\n              </Heading>\n              <Wrap spacing={3} wrap=\"wrap\" align=\"start\" w=\"full\">\n                {response.data.movie[\"torrents\"] &&\n                  response.data.movie[\"torrents\"].map((val, key) => {\n                    return (\n                      <Button\n                        as=\"a\"\n                        href={val.url}\n                        colorScheme=\"green\"\n                        leftIcon={<FaDownload />}\n                        key={key}\n                      >\n                        {val.quality}.{val.type} ({val.size})\n                      </Button>\n                    );\n                  })}\n              </Wrap>\n              <Divider />\n              <Heading as=\"h3\" fontSize=\"lg\" align=\"left\" w=\"full\">\n                Suggested Movies\n              </Heading>\n              <SuggestedMovies id={query.get(\"movie_id\")} />\n            </VStack>\n          )}\n          {isLoading && (\n            <Center w=\"full\" pb={3}>\n              <Spinner />\n            </Center>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default MovieDetails;\n","import { IconButton, useColorMode } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\n\nconst ColorModeToggle = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <IconButton\n      onClick={toggleColorMode}\n      icon={colorMode === \"light\" ? <FaMoon /> : <FaSun />}\n    />\n  );\n};\n\nexport default ColorModeToggle;\n","import React, { useEffect } from \"react\";\nimport { IoSearchSharp } from \"react-icons/io5\";\nimport {\n  Kbd,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Input,\n  Button,\n} from \"@chakra-ui/react\";\n\nconst InputAsButton = ({ onOpen }) => {\n  useEffect(() => {\n    const handleBodyKeyDown = (e) => {\n      if (e.keyCode === 83 && e.altKey) {\n        onOpen();\n      }\n    };\n    document.body.addEventListener(\"keyup\", handleBodyKeyDown);\n  }, [onOpen]);\n\n  return (\n    <InputGroup maxW=\"full\">\n      <InputLeftElement pointerEvents=\"none\" children={<IoSearchSharp />} />\n      <Input\n        as={Button}\n        justifyContent=\"start\"\n        fontWeight={400}\n        onClick={onOpen}\n        variant=\"filled\"\n      >\n        Search Movies\n      </Input>\n      <InputRightElement\n        mr={6}\n        display={{ base: \"none\", md: \"flex\" }}\n        pointerEvents=\"none\"\n        children={\n          <>\n            <Kbd>alt</Kbd> + <Kbd>s</Kbd>\n          </>\n        }\n      />\n    </InputGroup>\n  );\n};\n\nexport default InputAsButton;\n","import {\n  AspectRatio,\n  Box,\n  Center,\n  Divider,\n  GridItem,\n  Heading,\n  HStack,\n  IconButton,\n  Image,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  SimpleGrid,\n  Spinner,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { ImVideoCamera } from \"react-icons/im\";\nimport React, { useState } from \"react\";\nimport ColorModeToggle from \"./ColorModeToggle\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport InputAsButton from \"./InputAsButton\";\nimport { IoMenu, IoSearchSharp } from \"react-icons/io5\";\nimport useAPIrequest from \"../../adapters/useAPIrequest\";\nimport { GoPerson } from \"react-icons/go\";\n\nconst Navbar = ({ toggleSideNav }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [SearchTerm, setSearchTerm] = useState(\"\");\n  const history = useHistory();\n\n  const { response } = useAPIrequest(\n    \"https://yts.mx/api/v2/list_movies.json?query_term=\" +\n      SearchTerm.toLowerCase()\n  );\n\n  return (\n    <SimpleGrid as=\"header\" columns={5} row={1} spacing={3} mt={6} mb={9}>\n      <GridItem colSpan={{ base: 3, lg: 1 }}>\n        <HStack as={Link} to=\"/\" fontSize=\"4xl\" maxW=\"220px\" w=\"full\">\n          <ImVideoCamera />\n          <Heading as=\"h2\" fontSize=\"2xl\">\n            MovieLister\n          </Heading>\n        </HStack>\n      </GridItem>\n      <GridItem colSpan={{ base: 5, lg: 3 }}>\n        <InputAsButton onOpen={onOpen} />\n      </GridItem>\n      <GridItem\n        colSpan={{ base: 2, lg: 1 }}\n        colStart={{ base: 4, lg: 5 }}\n        rowStart={1}\n      >\n        <HStack justify=\"flex-end\">\n          <IconButton\n            display={{ base: \"flex\", sm: \"none\" }}\n            icon={<GoPerson />}\n          ></IconButton>\n          <ColorModeToggle />\n          <IconButton\n            onClick={toggleSideNav}\n            display={{ base: \"flex\", md: \"none\" }}\n            icon={<IoMenu />}\n          ></IconButton>\n        </HStack>\n      </GridItem>\n      <Modal\n        isOpen={isOpen}\n        onClose={() => {\n          onClose();\n          setSearchTerm(\"\");\n        }}\n      >\n        <ModalOverlay />\n        <ModalContent rounded=\"xl\" p={3} mx={3}>\n          <ModalHeader p={0}>\n            <InputGroup>\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<IoSearchSharp />}\n              />\n              <Input\n                onChange={(e) => {\n                  setSearchTerm(e.target.value);\n                }}\n                type=\"text\"\n                placeholder=\"Search Movies\"\n                variant=\"filled\"\n              />\n            </InputGroup>\n          </ModalHeader>\n          <ModalBody\n            p={0}\n            mt={6}\n            display={SearchTerm === \"\" ? \"none\" : \"block\"}\n          >\n            {response && response.data.movies && (\n              <VStack w=\"full\" spacing={3}>\n                {response.data.movies.map((val, key) => {\n                  return (\n                    <Box key={key} w=\"full\">\n                      <Divider mb={3} />\n                      <HStack\n                        cursor=\"pointer\"\n                        onClick={() => history.push(\"?movie_id=\" + val.id)}\n                        spacing={6}\n                      >\n                        <AspectRatio ratio={2 / 3} w=\"10%\" objectFit=\"cover\">\n                          <Image\n                            alt={val.title}\n                            fit=\"cover\"\n                            rounded=\"lg\"\n                            src={val[\"small_cover_image\"]}\n                          />\n                        </AspectRatio>\n                        <Heading maxW=\"80%\" as=\"h3\" fontSize=\"xl\">\n                          {val[\"title_long\"]}\n                        </Heading>\n                      </HStack>\n                    </Box>\n                  );\n                })}\n              </VStack>\n            )}\n            {response && !response.data.movies && (\n              <Center w=\"full\">\n                <Spinner />\n              </Center>\n            )}\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </SimpleGrid>\n  );\n};\n\nexport default Navbar;\n","import {\n  AspectRatio,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Skeleton,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nconst YoutubeEmbedded = ({ isOpen, onClose, videoID, title }) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\n      <ModalOverlay />\n      <ModalContent px={3}>\n        <ModalHeader mb={1}>{title}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>\n          <Skeleton w=\"full\" isLoaded={!isLoading} rounded=\"lg\">\n            <AspectRatio ratio={16 / 9} maxW=\"full\">\n              <iframe\n                title={title}\n                id=\"ytplayer\"\n                type=\"text/html\"\n                onLoad={() => setIsLoading(false)}\n                src={\"https://www.youtube.com/embed/\" + videoID}\n              ></iframe>\n            </AspectRatio>\n          </Skeleton>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default YoutubeEmbedded;\n","import {\n  AspectRatio,\n  Box,\n  Button,\n  Center,\n  Heading,\n  Image,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { Fade } from \"@chakra-ui/react\";\nimport { FaPlay } from \"react-icons/fa\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport YoutubeEmbedded from \"../../../../components/YoutubeEmbedded\";\n\nconst ReleaseCard = ({ show, title, img, id, youtube }) => {\n  const history = useHistory();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Box\n      as={Fade}\n      in={show}\n      w=\"full\"\n      pos=\"relative\"\n      display={show ? \"block\" : \"none\"}\n      color=\"white\"\n    >\n      <AspectRatio ratio={{ base: 4 / 3, sm: 16 / 9 }}>\n        <Image rounded=\"xl\" src={img} />\n      </AspectRatio>\n      <Center\n        as={VStack}\n        spacing={{ base: 3, sm: 6 }}\n        pos=\"absolute\"\n        w=\"full\"\n        h=\"full\"\n        inset={0}\n      >\n        <Heading\n          as=\"h1\"\n          fontSize={{ base: \"xl\", sm: \"3xl\" }}\n          textAlign=\"center\"\n          textShadow=\"dark-lg\"\n        >\n          {title}\n        </Heading>\n        <Button\n          size=\"sm\"\n          onClick={() => history.push(\"?movie_id=\" + id)}\n          colorScheme=\"green\"\n          boxShadow=\"dark-lg\"\n        >\n          Download Now\n        </Button>\n        {youtube !== \"\" && (\n          <Button\n            size=\"sm\"\n            onClick={() => onOpen()}\n            textColor=\"white\"\n            leftIcon={<FaPlay />}\n            boxShadow=\"dark-lg\"\n            colorScheme=\"green\"\n            variant=\"outline\"\n          >\n            Watch Trailer\n          </Button>\n        )}\n      </Center>\n      {youtube !== \"\" && (\n        <YoutubeEmbedded\n          isOpen={isOpen}\n          onClose={onClose}\n          videoID={youtube}\n          title={title}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default ReleaseCard;\n","import { Badge, Heading, HStack, Button, Spacer } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst ReleaseHeader = () => {\n  return (\n    <HStack spacing={3} w=\"full\" align=\"center\" pb={{ base: 2, md: 6 }}>\n      <Heading as=\"h1\" fontSize=\"3xl\">\n        New Releases\n      </Heading>\n      <Badge rounded=\"lg\" colorScheme=\"green\" fontSize=\"xl\">\n        New\n      </Badge>\n\n      <Spacer />\n      <Button as={Link} to=\"/movies/new\" size=\"sm\">\n        See All\n      </Button>\n    </HStack>\n  );\n};\n\nexport default ReleaseHeader;\n","import { Center, HStack, IconButton, Skeleton, VStack } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport { GoPrimitiveDot } from \"react-icons/go\";\nimport ReleaseCard from \"./ReleaseCard\";\nimport ReleaseHeader from \"./ReleaseHeader\";\nimport useAPIrequest from \"../../../adapters/useAPIrequest\";\n\nconst NewRelease = () => {\n  const { response } = useAPIrequest(\n    \"https://yts.mx/api/v2/list_movies.json?sort_by=year\",\n  );\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [page, setPage] = useState(1);\n  const [slides, setSlides] = useState([\n    { show: true },\n    { show: false },\n    { show: false },\n    { show: false },\n    { show: false },\n    { show: false },\n  ]);\n\n  const handlePageChange = (dir) => {\n    if (dir === +1) {\n      page === 6 ? setPage(1) : setPage(page + 1);\n    } else {\n      page === 1 ? setPage(6) : setPage(page - 1);\n    }\n  };\n\n  useEffect(() => {\n    const arr = [\n      { show: true },\n      { show: false },\n      { show: false },\n      { show: false },\n      { show: false },\n      { show: false },\n    ];\n\n    if (response && response !== null) {\n      arr.map((item, index) => {\n        return [\n          (item.img = response.data.movies[index][\"background_image_original\"]),\n          (item.title = response.data.movies[index][\"title_long\"]),\n          (item.id = response.data.movies[index][\"id\"]),\n          (item.youtube = response.data.movies[index][\"yt_trailer_code\"]),\n        ];\n      });\n\n      arr.map((item) => {\n        return (item.show = false);\n      });\n      arr[page - 1].show = true;\n      setSlides(arr);\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [response, page]);\n\n  return (\n    <VStack>\n      <ReleaseHeader />\n      <Skeleton rounded=\"xl\" isLoaded={!isLoading} w=\"full\">\n        <Center overflow=\"hidden\" w=\"full\" pos=\"relative\">\n          {slides.map((item, key) => {\n            return (\n              <ReleaseCard\n                show={item.show}\n                key={key}\n                isLoading={isLoading}\n                img={item.img}\n                title={item.title}\n                id={item.id}\n                youtube={item.youtube}\n              />\n            );\n          })}\n\n          <HStack spacing={0} pos=\"absolute\" bottom={3} color=\"white\">\n            {[...Array(6)].map((e, i) => (\n              <GoPrimitiveDot key={i} opacity={i + 1 === page ? 1 : 0.3} />\n            ))}\n          </HStack>\n          <IconButton\n            pos=\"absolute\"\n            left={3}\n            bottom={3}\n            onClick={() => handlePageChange(-1)}\n            size=\"sm\"\n            icon={<FaArrowLeft />}\n          />\n          <IconButton\n            pos=\"absolute\"\n            right={3}\n            bottom={3}\n            onClick={() => handlePageChange(+1)}\n            size=\"sm\"\n            icon={<FaArrowRight />}\n          />\n        </Center>\n      </Skeleton>\n    </VStack>\n  );\n};\nexport default NewRelease;\n","import {\n  GridItem,\n  Heading,\n  Button,\n  VStack,\n  Box,\n  Center,\n  Spinner,\n  SimpleGrid,\n  Stack,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport MovieCard from \"../../../components/MovieCard\";\nimport useAPIrequest from \"../../../adapters/useAPIrequest\";\nimport { Link } from \"react-router-dom\";\n\nconst RecentlyAdded = () => {\n  const { response } = useAPIrequest(\n    \"https://yts.mx/api/v2/list_movies.json?sort_by=date_added\",\n  );\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (response && response !== null) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [response]);\n\n  return (\n    <VStack spacing={6} align=\"start\" py={6}>\n      <Stack\n        w=\"full\"\n        spacing={{ base: 3, lg: 6 }}\n        direction={{ base: \"row\", lg: \"column\" }}\n        align={{ base: \"center\", sm: \"start\" }}\n      >\n        <Heading\n          whiteSpace=\"nowrap\"\n          textTransform={{ base: \"none\", lg: \"uppercase\" }}\n          as=\"h4\"\n          fontSize={{ base: \"2xl\", lg: \"md\" }}\n        >\n          Recently Added\n        </Heading>\n        <Box as=\"hr\" w=\"full\" />\n      </Stack>\n      <SimpleGrid\n        columns={{ base: 1, xs: 2, sm: 3, lg: 1 }}\n        spacing={6}\n        w=\"full\"\n      >\n        {response &&\n          response.data.movies.slice(0, 6).map((val, key) => {\n            return (\n              <GridItem key={key} w=\"full\">\n                <MovieCard\n                  img={val[\"background_image\"]}\n                  aspect={16 / 9}\n                  title={val[\"title_english\"]}\n                  year={val[\"year\"]}\n                  isLoading={isLoading}\n                  rating={val[\"rating\"]}\n                  id={val[\"id\"]}\n                />\n              </GridItem>\n            );\n          })}\n      </SimpleGrid>\n      {response && (\n        <Button as={Link} to=\"/movies/recent\" w=\"full\" colorScheme=\"green\">\n          View More\n        </Button>\n      )}\n      {isLoading && (\n        <Center w=\"full\">\n          <Spinner />\n        </Center>\n      )}\n    </VStack>\n  );\n};\n\nexport default RecentlyAdded;\n","import {\n  Stack,\n  Heading,\n  HStack,\n  IconButton,\n  Button,\n  Divider,\n  Spacer,\n} from \"@chakra-ui/react\";\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport { GoPrimitiveDot } from \"react-icons/go\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst TopMoviesHeader = ({ setPage, page, setIsLoading, type }) => {\n  const handlePageNav = (dir) => {\n    setIsLoading(true);\n    setPage(page + dir);\n  };\n\n  return (\n    <Stack\n      direction={{ base: \"column\", sm: \"row\" }}\n      w=\"full\"\n      align={{ base: \"start\", sm: \"center\" }}\n      py={6}\n      spacing={6}\n    >\n      <Heading whiteSpace=\"nowrap\" as=\"h2\" fontSize=\"2xl\">\n        Top{\" \"}\n        {type === \"rating\"\n          ? \"Rated\"\n          : type === \"like_count\"\n          ? \"Likes\"\n          : \"Downloads\"}\n      </Heading>\n      <Divider w=\"full\" />\n      <HStack w={{ base: \"full\", sm: \"min\" }}>\n        <HStack spacing={0}>\n          {[...Array(6)].map((e, i) => (\n            <GoPrimitiveDot key={i} opacity={i + 1 === page ? 1 : 0.3} />\n          ))}\n        </HStack>\n        <Spacer display={{ base: \"block\", sm: \"none\" }} />\n        <IconButton\n          onClick={() => handlePageNav(-1)}\n          isDisabled={page === 1 ? true : false}\n          size=\"sm\"\n          icon={<FaArrowLeft />}\n        />\n\n        {page < 6 && (\n          <IconButton\n            onClick={() => handlePageNav(+1)}\n            size=\"sm\"\n            icon={<FaArrowRight />}\n          />\n        )}\n\n        {page === 6 && (\n          <Button\n            as={Link}\n            to={\n              \"/movies/\" +\n              (type === \"rating\"\n                ? \"rating\"\n                : type === \"like_count\"\n                ? \"likes\"\n                : \"downloads\")\n            }\n            size=\"sm\"\n            rightIcon={<FaArrowRight />}\n          >\n            See all\n          </Button>\n        )}\n      </HStack>\n    </Stack>\n  );\n};\n\nexport default TopMoviesHeader;\n","import {\n  Center,\n  GridItem,\n  SimpleGrid,\n  Spinner,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport MovieCard from \"../../../components/MovieCard\";\nimport TopMoviesHeader from \"./TopMoviesHeader\";\nimport useAPIrequest from \"../../../adapters/useAPIrequest\";\n\nconst TopMovies = ({ type }) => {\n  const [page, setPage] = useState(1);\n\n  const { response } = useAPIrequest(\n    \"https://yts.mx/api/v2/list_movies.json?sort_by=\" +\n      type +\n      \"&limit=6&page=\" +\n      page,\n  );\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (response && response !== null) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [response]);\n\n  return (\n    <VStack py={6}>\n      <TopMoviesHeader\n        setPage={setPage}\n        page={page}\n        setIsLoading={setIsLoading}\n        type={type}\n      />\n      <SimpleGrid\n        w=\"full\"\n        columns={{ base: 1, xs: 2, sm: 3 }}\n        row={2}\n        spacing={6}\n      >\n        {response &&\n          response.data.movies.map((val, key) => {\n            return (\n              <GridItem key={key}>\n                <MovieCard\n                  img={val[\"medium_cover_image\"]}\n                  title={val[\"title_english\"]}\n                  year={val[\"year\"]}\n                  isLoading={isLoading}\n                  rating={val[\"rating\"]}\n                  id={val[\"id\"]}\n                />\n              </GridItem>\n            );\n          })}\n        {isLoading && (\n          <GridItem as={Center} colSpan={3}>\n            <Spinner />\n          </GridItem>\n        )}\n      </SimpleGrid>\n    </VStack>\n  );\n};\n\nexport default TopMovies;\n","import {\n  Box,\n  Button,\n  Center,\n  GridItem,\n  SimpleGrid,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NewRelease from \"./NewRelease\";\nimport RecentlyAdded from \"./RecentlyAdded\";\nimport TopMovies from \"./TopMovies\";\n\nconst Home = () => {\n  return (\n    <SimpleGrid columns={4} row={1} spacing={6} pb={{ base: 0, md: 6 }}>\n      <GridItem colSpan={1} display={{ base: \"none\", lg: \"block\" }}>\n        <RecentlyAdded />\n      </GridItem>\n      <GridItem\n        colSpan={{ base: 4, lg: 3 }}\n        bg={useColorModeValue(\"gray.300\", \"gray.700\")}\n        p={{ base: 3, md: 6 }}\n        rounded=\"xl\"\n      >\n        <NewRelease />\n        <Box display={{ base: \"block\", lg: \"none\" }}>\n          <RecentlyAdded />\n        </Box>\n        <TopMovies type=\"rating\" />\n        <TopMovies type=\"like_count\" />\n        <TopMovies type=\"download_count\" />\n        <Center w=\"full\">\n          <Button as={Link} to=\"/movies/all\" colorScheme=\"green\">\n            Discover More Movies\n          </Button>\n        </Center>\n      </GridItem>\n    </SimpleGrid>\n  );\n};\n\nexport default Home;\n","import { useLocation } from \"react-router-dom\";\nimport toProperCase from \"./../functions/toProperCase\";\n\nconst useWidnowLocation = () => {\n  const location = useLocation();\n  let title = \"\";\n  let type = \"\";\n  let genreFromURL = null;\n\n  if (location.pathname === \"/movies/new\") {\n    title = \"New Releases\";\n    type = \"year\";\n    genreFromURL = null;\n  } else if (location.pathname === \"/movies/rating\") {\n    title = \"Top Rated\";\n    type = \"rating\";\n    genreFromURL = null;\n  } else if (location.pathname === \"/movies/likes\") {\n    title = \"Top Likes\";\n    type = \"like_count\";\n    genreFromURL = null;\n  } else if (location.pathname === \"/movies/downloads\") {\n    title = \"Top Downloads\";\n    type = \"download_count\";\n    genreFromURL = null;\n  } else if (location.pathname === \"/movies/recent\") {\n    title = \"Recently Added\";\n    type = \"date_added\";\n    genreFromURL = null;\n  } else if (location.pathname === \"/movies/all\") {\n    title = \"All Movies\";\n    type = \"all\";\n    genreFromURL = null;\n  } else {\n    title = toProperCase(location.pathname.split(\"/\").pop()) + \" Movies\";\n    genreFromURL = location.pathname.split(\"/\").pop();\n  }\n\n  return { title, type, genreFromURL };\n};\n\nexport default useWidnowLocation;\n","import { IconButton, Button, ButtonGroup, Box } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\n\nconst Pagination = ({ setPage, page, setIsLoading, movie_count, limit }) => {\n  const totalPages = Math.ceil(movie_count / limit);\n\n  const handlePageNav = (dir) => {\n    setIsLoading(true);\n    setPage(page + dir);\n  };\n\n  return (\n    <ButtonGroup isAttached boxShadow=\"xs\" rounded=\"md\">\n      <IconButton\n        onClick={() => handlePageNav(-1)}\n        isDisabled={page === 1 ? true : false}\n        size=\"sm\"\n        icon={<FaArrowLeft />}\n      />\n      {page !== 1 && (\n        <Button\n          size=\"sm\"\n          onClick={() => setPage(1)}\n          isDisabled={page === 1 ? true : false}\n        >\n          1\n        </Button>\n      )}\n\n      {page - 1 > 1 && <Box px={3}>...</Box>}\n      <Button size=\"sm\" colorScheme=\"green\" isDisabled>\n        {page}\n      </Button>\n      {page + 1 < totalPages && <Box px={3}>...</Box>}\n\n      {page !== totalPages && (\n        <Button\n          size=\"sm\"\n          onClick={() => setPage(totalPages)}\n          isDisabled={page === totalPages ? true : false}\n        >\n          {totalPages}\n        </Button>\n      )}\n      <IconButton\n        onClick={() => handlePageNav(+1)}\n        isDisabled={page === totalPages ? true : false}\n        size=\"sm\"\n        icon={<FaArrowRight />}\n      />\n    </ButtonGroup>\n  );\n};\n\nexport default Pagination;\n","import {\n  HStack,\n  Select,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  Box,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport categories from \"./../../../data/categories\";\nimport toProperCase from \"../../../functions/toProperCase\";\nimport React from \"react\";\n\nconst SortControls = ({\n  rating,\n  setQuality,\n  setGenre,\n  setOrderBy,\n  setRating,\n  displayGenre,\n}) => {\n  return (\n    <Stack spacing={3} w=\"full\">\n      <Stack direction={{ base: \"column\", sm: \"row\" }} spacing={3}>\n        <Select\n          variant=\"filled\"\n          placeholder=\"Order By\"\n          size=\"sm\"\n          rounded=\"lg\"\n          onChange={(e) => setOrderBy(e.target.value)}\n        >\n          <option value=\"desc\">Descending</option>\n          <option value=\"asc\">Ascending</option>\n        </Select>\n        <Select\n          variant=\"filled\"\n          placeholder=\"Quality\"\n          size=\"sm\"\n          rounded=\"lg\"\n          onChange={(e) => setQuality(e.target.value)}\n        >\n          <option value=\"720p\">720p</option>\n          <option value=\"1080p\">1080p</option>\n          <option value=\"2160p\">2160p</option>\n          <option value=\"3D\">3D</option>\n        </Select>\n        {displayGenre && (\n          <Select\n            variant=\"filled\"\n            placeholder=\"Genre\"\n            defaultValue=\"all\"\n            size=\"sm\"\n            rounded=\"lg\"\n            onChange={(e) => setGenre(e.target.value)}\n          >\n            {categories.map((val, key) => {\n              return (\n                <option value={val} key={key}>\n                  {toProperCase(val)}\n                </option>\n              );\n            })}\n          </Select>\n        )}\n      </Stack>\n      <HStack spacing={6}>\n        <Text>Rating</Text>\n        <Slider\n          colorScheme=\"green\"\n          defaultValue={0}\n          min={0}\n          max={9}\n          step={1}\n          onChangeEnd={(val) => setRating(val)}\n        >\n          <SliderTrack>\n            <Box position=\"relative\" right={10} />\n            <SliderFilledTrack />\n          </SliderTrack>\n          <SliderThumb boxSize={4} />\n        </Slider>\n        <Text>{rating}+</Text>\n      </HStack>\n    </Stack>\n  );\n};\n\nexport default SortControls;\n","import {\n  Heading,\n  Divider,\n  SimpleGrid,\n  GridItem,\n  VStack,\n  Spacer,\n  Button,\n  HStack,\n  useColorModeValue,\n  Center,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useAPIrequest from \"../../adapters/useAPIrequest\";\nimport MovieCard from \"../../components/MovieCard\";\nimport useWidnowLocation from \"../../hooks/useWidnowLocation\";\nimport Pagination from \"./Pagination\";\nimport SortControls from \"./SortControls\";\n\nconst Movies = () => {\n  const { title, type, genreFromURL } = useWidnowLocation();\n  const [page, setPage] = useState(1);\n\n  const [quality, setQuality] = useState(\"all\");\n  const [genre, setGenre] = useState(\"all\");\n  const [orderBy, setOrderBy] = useState(\"desc\");\n  const [rating, setRating] = useState(0);\n\n  const { response } = useAPIrequest(\n    \"https://yts.mx/api/v2/list_movies.json?\" +\n      (genreFromURL ? \"\" : \"sort_by=\" + type + \"&\") +\n      \"quality=\" +\n      quality +\n      \"&genre=\" +\n      genre +\n      \"&minimum_rating=\" +\n      rating +\n      \"&order_by=\" +\n      orderBy +\n      \"&page=\" +\n      page,\n  );\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (genreFromURL !== null) {\n      setGenre(genreFromURL);\n    } else {\n      setGenre(\"all\");\n    }\n  }, [genreFromURL]);\n\n  useEffect(() => {\n    if (response && response !== null) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [response]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, [quality, genre, orderBy, rating, type]);\n\n  return (\n    <VStack\n      spacing={6}\n      p={{ base: 3, md: 6 }}\n      bg={useColorModeValue(\"gray.300\", \"gray.700\")}\n      rounded=\"xl\"\n      mb={6}\n    >\n      <HStack alignSelf=\"start\" w=\"full\">\n        <Heading as=\"h1\" fontSize=\"3xl\">\n          {title}\n        </Heading>\n        <Spacer />\n        <Button as={Link} to=\"/\" size=\"sm\">\n          Back to Home\n        </Button>\n      </HStack>\n      <Divider />\n      <SortControls\n        displayGenre={!genreFromURL}\n        rating={rating}\n        setQuality={setQuality}\n        setGenre={setGenre}\n        setOrderBy={setOrderBy}\n        setRating={setRating}\n      />\n      <SimpleGrid\n        w=\"full\"\n        columns={{ base: 1, xs: 2, sm: 3, lg: 4 }}\n        spacing={{ base: 3, md: 6 }}\n      >\n        {response &&\n          response.data.movies.map((val, key) => {\n            return (\n              <GridItem key={key}>\n                <MovieCard\n                  img={val[\"medium_cover_image\"]}\n                  title={val[\"title_english\"]}\n                  year={val[\"year\"]}\n                  isLoading={isLoading}\n                  rating={val[\"rating\"]}\n                  id={val[\"id\"]}\n                />\n              </GridItem>\n            );\n          })}\n        {isLoading && (\n          <GridItem as={Center} colSpan={{ xs: 2, sm: 3, xl: 4 }}>\n            <Spinner />\n          </GridItem>\n        )}\n      </SimpleGrid>\n      {response && (\n        <Pagination\n          setPage={setPage}\n          setIsLoading={setIsLoading}\n          page={page}\n          limit={response.data.limit}\n          movie_count={response.data[\"movie_count\"]}\n        />\n      )}\n    </VStack>\n  );\n};\n\nexport default Movies;\n","import { Container, GridItem, SimpleGrid } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport CategoriesNav from \"./components/CategoriesNav\";\nimport Footer from \"./components/Footer\";\nimport MovieDetails from \"./components/MovieDetails\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Movies from \"./pages/Movies\";\n\nconst App = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleSideNav = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Container\n      as=\"main\"\n      maxW={{\n        xs: \"full\",\n        md: \"720px\",\n        lg: \"960px\",\n        xl: \"1140px\",\n        xxl: \"1320px\",\n      }}\n    >\n      <HashRouter>\n        <Navbar toggleSideNav={toggleSideNav} />\n        <SimpleGrid columns={5} row={1} spacing={6}>\n          <GridItem colSpan={{ base: 5, md: 4 }}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/movies/\" component={Movies} />\n            </Switch>\n          </GridItem>\n          <GridItem>\n            <CategoriesNav\n              isOpen={isOpen}\n              toggleSideNav={toggleSideNav}\n              setIsOpen={setIsOpen}\n            />\n          </GridItem>\n        </SimpleGrid>\n        <MovieDetails />\n        <Footer />\n      </HashRouter>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider resetCSS={true} theme={theme}>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}